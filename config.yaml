# Integration Dashboard Configuration
app:
  name: "Integration Dashboard"
  version: "2.4.1"
  environment: "development"  # Set directly in config.yaml to avoid Windows NODE_ENV issues
  port: 5000

# OpenAI Configuration
openai:
  api_key: "${OPENAI_API_KEY}"
  model: "gpt-4o"
  max_tokens: 1000
  temperature: 0.7
  features:
    chat_analysis: true
    data_insights: true
    performance_recommendations: true

# Azure OpenAI Configuration (for future migration)
azure_openai:
  enabled: false
  endpoint: "${AZURE_OPENAI_ENDPOINT}"
  api_key: "${AZURE_OPENAI_API_KEY}"
  deployment_name: "${AZURE_OPENAI_DEPLOYMENT}"
  api_version: "2024-02-01"

# JanusGraph Configuration
janusgraph:
  enabled: true
  useRemote: true  # Set to true to use actual JanusGraph database, false for in-memory storage
  connection:
    url: "ws://localhost:8182/gremlin"
    timeout: 30000
    ping_interval: 30000
    max_retries: 3
  database:
    name: "janusgraph"
    traversal_source: "g"
  features:
    health_check: true
    schema_introspection: true
    performance_monitoring: true

# Division Teams Configuration
# Each division team contains multiple teams that cluster data nodes by type
sources:
  stc:
    name: "System Truth Cache"
    description: "Division team managing system operations through specialized teams"
    type: "janusgraph"
    connection_string: "ws://localhost:8182/gremlin"
    division_type: "system_operations"
    teams:
      - team_code: "cache_mgmt"
        name: "Cache Management Team"
        team_type: "cache_management"
        data_node_types: ["cache_entries", "cache_policies", "cache_metrics"]
      - team_code: "sys_records"
        name: "System Records Team" 
        team_type: "record_management"
        data_node_types: ["system_logs", "audit_trails", "performance_data"]
      - team_code: "data_repos"
        name: "Data Repository Team"
        team_type: "repository_management"
        data_node_types: ["data_stores", "backup_systems", "archival_data"]
    health_check_interval: 60
  cpt:
    name: "Configuration Processing Tool"
    description: "Division team managing configuration operations through specialized teams"
    type: "rest_api"
    endpoint: "http://localhost:3001/api/config"
    division_type: "configuration_mgmt"
    teams:
      - team_code: "config_files"
        name: "Configuration Files Team"
        team_type: "file_management"
        data_node_types: ["config_templates", "environment_configs", "deployment_configs"]
      - team_code: "settings_mgmt"
        name: "Settings Management Team"
        team_type: "settings_management"
        data_node_types: ["user_settings", "system_settings", "feature_flags"]
      - team_code: "policy_mgmt"
        name: "Policy Management Team"
        team_type: "policy_management"
        data_node_types: ["access_policies", "security_policies", "compliance_rules"]
    health_check_interval: 60
  slc:
    name: "Service Layer Coordinator"
    description: "Central node clustering service orchestration data points"
    type: "rest_api"
    endpoint: "http://localhost:3002/api/services"
    cluster_type: "service_data"
    data_point_types: ["service_definitions", "endpoints", "orchestration_rules"]
    health_check_interval: 60
  tmc:
    name: "Transaction Management Center"
    description: "Central node clustering transaction monitoring data points"
    type: "janusgraph"
    connection_string: "ws://localhost:8182/gremlin"
    cluster_type: "transaction_data"
    data_point_types: ["transactions", "work_items", "processing_states", "audit_logs"]
    health_check_interval: 60
  cas:
    name: "Central Authentication Service"
    description: "Central node clustering authentication and authorization data points"
    type: "rest_api"
    endpoint: "http://localhost:3003/api/auth"
    cluster_type: "auth_data"
    data_point_types: ["user_credentials", "permissions", "roles", "access_tokens"]
    health_check_interval: 60
  nvl:
    name: "Network Validation Layer"
    description: "Central node clustering network validation data points"
    type: "rest_api"
    endpoint: "http://localhost:3004/api/network"
    cluster_type: "network_data"
    data_point_types: ["network_configs", "validation_rules", "connectivity_tests"]
    health_check_interval: 60

# Database Configuration
database:
  type: "postgresql"
  url: "${DATABASE_URL}"
  pool:
    min: 2
    max: 10
  migrations:
    auto_run: true

# External Services Configuration  
external:
  listitems:
    url: "https://api.example.com/listitems"
  janusgraph_schema:
    url: "https://janusgraph.example.com/schema"
  ssl_insecure: true  # Disable SSL certificate verification for external APIs

# AI Chat Configuration
ai:
  chat_enabled: "${AI_CHAT_ENABLED}"

# WebSocket Configuration
websocket:
  path: "/ws"
  ping_interval: 30000
  reconnect_attempts: 5
  reconnect_delay_base: 1000

# Logging Configuration
logging:
  level: "info"
  format: "json"
  outputs:
    - "console"
  request_logging: true
  performance_logging: true

# Security Configuration
security:
  cors:
    enabled: true
    origins: ["*"]
  rate_limiting:
    enabled: false
    requests_per_minute: 100